services:
  nginx:
    image: nginx:1.27-alpine
    restart: unless-stopped
    depends_on:
      frontend:
        condition: service_started
      directus:
        condition: service_started
      pgadmin:
        condition: service_started
    ports:
      - "80:80"
    volumes:
      - ./ops/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro

  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:8.13
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_PROXY_X_FOR_HEADERS: "True"
      PGADMIN_CONFIG_SCRIPT_NAME: "\"${PGADMIN_BASE_PATH}\""
      PGADMIN_CONFIG_APPLICATION_ROOT: "\"${PGADMIN_BASE_PATH}\""
      PGADMIN_CONFIG_SESSION_COOKIE_PATH: "\"${PGADMIN_BASE_PATH}\""
      PGADMIN_CONFIG_CSRF_COOKIE_PATH: "\"${PGADMIN_BASE_PATH}\""
      PGADMIN_CONFIG_SECURITY_COOKIE_PATH: "\"${PGADMIN_BASE_PATH}\""
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    ports:
      - "6380:6379"

  minio:
    image: quay.io/minio/minio:RELEASE.2025-09-07T16-13-09Z
    restart: unless-stopped
    entrypoint:
      - /bin/sh
      - /start-minio.sh
    command: ["server", "/data", "--console-address", ":9001"]
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
      - ./ops/minio/start-minio.sh:/start-minio.sh:ro

  directus:
    image: directus/directus:11.12.0
    restart: unless-stopped
    env_file:
      - .env
    environment:
      KEY: ${DIRECTUS_KEY}
      SECRET: ${DIRECTUS_SECRET}
      ADMIN_EMAIL: ${DIRECTUS_ADMIN_EMAIL}
      ADMIN_PASSWORD: ${DIRECTUS_ADMIN_PASSWORD}
      PUBLIC_URL: ${DIRECTUS_PUBLIC_URL}
      DB_CLIENT: ${DATABASE_CLIENT}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: ${DATABASE_NAME}
      DB_USER: ${DATABASE_USERNAME}
      DB_PASSWORD: ${DATABASE_PASSWORD}
      CACHE_ENABLED: ${DIRECTUS_CACHE_ENABLED}
      CACHE_REDIS: ${DIRECTUS_CACHE_REDIS}
      STORAGE_LOCATIONS: ${DIRECTUS_STORAGE_LOCATIONS}
      STORAGE_LOCAL_ROOT: /directus/uploads
      REFRESH_TOKEN_COOKIE_DOMAIN: ${DIRECTUS_COOKIE_DOMAIN}
      REFRESH_TOKEN_COOKIE_SECURE: ${DIRECTUS_REFRESH_COOKIE_SECURE}
      REFRESH_TOKEN_COOKIE_SAME_SITE: ${DIRECTUS_REFRESH_COOKIE_SAME_SITE}
      REFRESH_TOKEN_COOKIE_PATH: ${DIRECTUS_REFRESH_COOKIE_PATH}
      APP_ICON: ${DIRECTUS_APP_ICON}
      EMAIL_TRANSPORT: ${DIRECTUS_EMAIL_TRANSPORT}
      EMAIL_FROM: ${DIRECTUS_ADMIN_EMAIL}
      REDIS: redis://redis:6379/0
      CORS_ENABLED: ${DIRECTUS_CORS_ENABLED}
      CORS_ORIGIN: ${DIRECTUS_CORS_ORIGIN}
      EXTENSIONS_AUTO_RELOAD: "true"
      NODE_ENV: production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started
      directus-storage-permissions:
        condition: service_completed_successfully
    volumes:
      - ./directus/uploads:/directus/uploads
      - ./directus/extensions:/directus/extensions
      - ./directus/snapshot.yaml:/directus/snapshot.yaml:ro

  directus-storage-permissions:
    image: busybox:1.37.0
    restart: "no"
    command:
      - /bin/sh
      - -c
      - >-
        mkdir -p /directus/uploads &&
        chown -R 1000:1000 /directus/uploads
    volumes:
      - ./directus/uploads:/directus/uploads

  frontend:
    build:
      context: ./frontend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_CMS_URL: ${NEXT_PUBLIC_CMS_URL}
      NEXT_PUBLIC_ASSETS_URL: ${NEXT_PUBLIC_ASSETS_URL}
      NEXT_PUBLIC_SITE_URL: ${NEXT_PUBLIC_SITE_URL}
      CMS_INTERNAL_URL: ${CMS_INTERNAL_URL}
    depends_on:
      directus:
        condition: service_started
    command: ["node", "server.js"]
    volumes:
      - ./scripts:/app/scripts:ro

volumes:
  postgres_data:
  minio_data:
  pgadmin_data:
