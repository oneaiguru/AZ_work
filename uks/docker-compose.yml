version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    ports:
      - "6379:6379"

  minio:
    image: quay.io/minio/minio:RELEASE.2024-09-22T00-33-43Z
    restart: unless-stopped
    command: ["server", "/data", "--console-address", ":9001"]
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  cms:
    build:
      context: ./cms
    env_file:
      - .env
    environment:
      NODE_ENV: development
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_SSL: "false"
      REDIS_HOST: redis
      REDIS_PORT: 6379
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET_PUBLIC: ${MINIO_BUCKET_PUBLIC}
      MINIO_BUCKET_PRIVATE: ${MINIO_BUCKET_PRIVATE}
      MINIO_USE_SSL: "false"
      MINIO_FORCE_PATH_STYLE: "true"
      UPLOAD_PROVIDER: ${UPLOAD_PROVIDER}
      UPLOAD_BASE_URL: ${UPLOAD_BASE_URL}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started
    ports:
      - "1337:1337"
    volumes:
      - ./cms:/app
      - cms_uploads:/app/public/uploads

  frontend:
    build:
      context: ./frontend
    env_file:
      - .env
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_CMS_URL: http://nginx
    depends_on:
      cms:
        condition: service_started
    ports:
      - "3000:3000"
    command: ["node", "server.js"]

  nginx:
    image: nginx:1.27-alpine
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      frontend:
        condition: service_started
      cms:
        condition: service_started
    volumes:
      - ./ops/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"

volumes:
  postgres_data:
  minio_data:
  cms_uploads:
