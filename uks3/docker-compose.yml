services:
  traefik:
    image: traefik:3.1
    restart: unless-stopped
    command:
      - --providers.file.filename=/etc/traefik/traefik.yml
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.dashboard.address=:8080
    env_file: .env
    environment:
      - TRAEFIK_ACME_CHALLENGE=${TRAEFIK_ACME_CHALLENGE}
      - TRAEFIK_EMAIL=${TRAEFIK_EMAIL}
      - TRAEFIK_DNS_PROVIDER=${TRAEFIK_DNS_PROVIDER:-}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./ops/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - traefik_letsencrypt:/etc/traefik/acme
      - ./ops/traefik/entrypoint.sh:/entrypoint.sh:ro
    entrypoint: ["/entrypoint.sh"]
    ports:
      - '80:80'
      - '443:443'
      - '8080:8080'

  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    env_file: .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER}']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    env_file: .env

  minio:
    image: minio/minio:RELEASE.2024-05-10T01-41-38Z
    restart: unless-stopped
    command: server /data --console-address ':9001'
    env_file: .env
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/ready']
      interval: 10s
      timeout: 5s
      retries: 5

  directus:
    image: directus/directus:11.0.2
    restart: unless-stopped
    env_file: .env
    environment:
      KEY: ${DIRECTUS_STATIC_TOKEN}
      SECRET: ${DIRECTUS_STATIC_TOKEN}
      ADMIN_EMAIL: ${DIRECTUS_ADMIN_EMAIL}
      ADMIN_PASSWORD: ${DIRECTUS_ADMIN_PASSWORD}
      DB_CLIENT: postgres
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      REDIS_ENABLED: ${DIRECTUS_REDIS_ENABLED}
      REDIS_HOST: ${DIRECTUS_REDIS_HOST}
      REDIS_PORT: ${DIRECTUS_REDIS_PORT}
      REDIS_PASSWORD: ${DIRECTUS_REDIS_PASSWORD}
      STORAGE_LOCATIONS: ${DIRECTUS_STORAGE_LOCATIONS}
      STORAGE_S3_DRIVER: ${DIRECTUS_STORAGE_S3_DRIVER}
      STORAGE_S3_KEY: ${DIRECTUS_STORAGE_S3_KEY}
      STORAGE_S3_SECRET: ${DIRECTUS_STORAGE_S3_SECRET}
      STORAGE_S3_BUCKET: ${DIRECTUS_STORAGE_S3_BUCKET}
      STORAGE_S3_ENDPOINT: ${DIRECTUS_STORAGE_S3_ENDPOINT}
      STORAGE_S3_FORCE_PATH_STYLE: ${DIRECTUS_STORAGE_S3_FORCE_PATH_STYLE}
      STORAGE_S3_REGION: ${DIRECTUS_STORAGE_S3_REGION}
      PUBLIC_URL: ${DIRECTUS_PUBLIC_URL}
      REFRESH_TOKEN_COOKIE_SECURE: ${DIRECTUS_REFRESH_COOKIE_SECURE}
      COOKIE_DOMAIN: ${DIRECTUS_COOKIE_DOMAIN}
    volumes:
      - directus_uploads:/directus/uploads
      - ./directus/snapshot.yaml:/directus/snapshot.yaml:ro
      - ./directus/extensions:/directus/extensions
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_healthy
    labels:
      - traefik.enable=true
      - traefik.http.routers.directus.rule=Host(`${TRAEFIK_CMS_DOMAIN}`) || Host(`cms.uks2.localhost`)
      - traefik.http.routers.directus.entrypoints=websecure
      - traefik.http.routers.directus.tls.certresolver=le
      - traefik.http.services.directus.loadbalancer.server.port=8055

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: .env
    environment:
      NEXT_PUBLIC_SITE_URL: ${NEXT_PUBLIC_SITE_URL}
      NEXT_PUBLIC_DIRECTUS_URL: ${NEXT_PUBLIC_DIRECTUS_URL}
      DIRECTUS_URL: http://directus:8055
      DIRECTUS_STATIC_TOKEN: ${DIRECTUS_STATIC_TOKEN}
    depends_on:
      directus:
        condition: service_started
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=Host(`${TRAEFIK_PUBLIC_DOMAIN}`) || Host(`uks3.uks2.localhost`)
      - traefik.http.routers.frontend.entrypoints=websecure
      - traefik.http.routers.frontend.tls.certresolver=le
      - traefik.http.services.frontend.loadbalancer.server.port=3000

  pgadmin:
    image: dpage/pgadmin4:8.6
    restart: unless-stopped
    env_file: .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    labels:
      - traefik.enable=true
      - traefik.http.routers.pgadmin.rule=Host(`${TRAEFIK_DB_DOMAIN}`) || Host(`db.uks2.localhost`)
      - traefik.http.routers.pgadmin.entrypoints=websecure
      - traefik.http.routers.pgadmin.tls.certresolver=le
      - traefik.http.services.pgadmin.loadbalancer.server.port=80

volumes:
  postgres_data:
  directus_uploads:
  minio_data:
  traefik_letsencrypt:
